LittleEndian();
DisplayFormatHex();

struct {
	char magic[0x4];
	uint32 file_size;
	uint32 file_count;
	uint32 padding_1;
} ini1_header;

typedef struct {
	ubyte FLAG_TEXT_COMPRESS : 1;
	ubyte FLAG_RO_COMPRESS : 1;
	ubyte FLAG_DATA_COMPRESS : 1;
	ubyte FLAG_IS_64_BIT_INSTRUCTION : 1;
	ubyte FLAG_ADDRESS_SPACE_64_BIT : 1;
	ubyte FLAG_USE_SYSTEM_POOL_PARTITION : 1;
} flags_t;

typedef struct {
	uint32 decompressed_offset;
	uint32 decompressed_size;
	uint32 compressed_size;
} section_header_t;

struct {
	char magic[0x4];
	char name[0xC];
	uint64 title_id;
	uint32 version;
	ubyte main_thread_priority;
	ubyte main_thread_core_number;
	ubyte padding_1;
	flags_t flags;
	section_header_t text;
	uint32 padding_2;
	section_header_t ro;
	uint32 main_thread_stack_size;
	section_header_t data;
	uint32 padding_3;
	section_header_t bss;
	ubyte padding_4[0x24];
	uint32 kernel_capabilities[0x20];
} kip1_header[ini1_header.file_count];
