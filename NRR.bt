LittleEndian();
DisplayFormatHex();

typedef struct {
	uint64 application_id_mask;
	uint64 application_id_pattern;
	ubyte  reserved_1[0x10];
	ubyte  public_key[0x100];
	ubyte  signature[0x100];
} Certification;

typedef enum <ubyte> {
	NrrKind_User      = 0,
	NrrKind_JitPlugin = 1
} NrrKind;

struct {
	char   magic[0x4];
	ubyte  signature_key_generation; /* certification.signature */
	ubyte  reserved_1[0xB];
	Certification certification;
	ubyte  signature[0x100];
	uint64 application_id;
	uint32 size;
	NrrKind nrr_kind;
	ubyte  reserved_2[0x3];
	uint32 hash_offset;
	uint32 hash_count;
	uint64 reserved_3;
} nrr_header;

struct {
	ubyte hash[0x20];
} nro_hash_list[nrr_header.hash_count];
