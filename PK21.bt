LittleEndian();
DisplayFormatHex();

struct Package2Header {
	ubyte  signature[0x100];
	ubyte  header_ctr[0x10];
	ubyte  kernel_ctr[0x10];
	ubyte  ini_ctr[0x10];
	ubyte  unused_ctr[0x10];
	ubyte  reserved_1[0x10];
	char   magic[0x4];
	if (magic != "PK21") {
		Warning("File is not decrypted or is not a valid file.");
		Exit(0);
	}
	uint32 base_offset;
	uint32 reserved_2;
	ubyte  version_max;
	ubyte  version_min;
	uint16 reserved_3;
	uint32 kernel_size;
	uint32 ini_size;
	uint32 unused_size;
	uint32 reserved_4;
	uint32 kernel_offset;
	uint32 ini_offset;
	uint32 unused_offset;
	uint32 reserved_5;
	ubyte  kernel_hash[0x20];
	ubyte  ini_hash[0x20];
	ubyte  unused_hash[0x20];
	ubyte  reserved_6[0x20];
} package2_header;

struct Package2Body {
	ubyte kernel_section[package2_header.kernel_size];
	ubyte ini_section[package2_header.ini_size];
	ubyte unused_section[package2_header.unused_size];
} package2_body;
