BigEndian();
DisplayFormatHex();

typedef enum <uint32> {
	SigType_Rsa4096Sha1    = 65536,
	SigType_Rsa2048Sha1    = 65537,
	SigType_Ecsda240Sha1   = 65538,
	SigType_Rsa4096Sha256  = 65539,
	SigType_Rsa2048Sha256  = 65540,
	SigType_Ecsda240Sha256 = 65541
} SigType;

typedef enum <uint32> {
	KeyType_Rsa4096   = 0,
	KeyType_Rsa2048   = 1,
	KeyType_Ecsda240  = 2
} KeyType;

struct {
	SigType sig_type;
	switch (sig_type) {
		case SigType_Rsa4096Sha1:
		case SigType_Rsa4096Sha256:
			ubyte signature[0x200];
			ubyte reserved_1[0x3C];
			break;
		case SigType_Rsa2048Sha1:
		case SigType_Rsa2048Sha256:
			ubyte signature[0x100];
			ubyte reserved_1[0x3C];
			break;
		case SigType_Ecsda240Sha1:
		case SigType_Ecsda240Sha256:
			ubyte signature[0x3C];
			ubyte reserved_1[0x40];
			break;
	}
	char    issuer[0x40];
	KeyType key_type;
	char    subject[0x40];
	uint32  cert_id;
	switch (key_type) {
		case KeyType_Rsa4096:
			ubyte  public_key[0x200];
			uint32 public_exponent;
			ubyte  reserved_2[0x34];
			break;
		case KeyType_Rsa2048:
			ubyte  public_key[0x100];
			uint32 public_exponent;
			ubyte  reserved_2[0x34];
			break;
		case KeyType_Ecsda240:
			ubyte  public_key[0x3C];
			ubyte  reserved_2[0x3C];
			break;
	}
} certificate;